# set terminal
set-option -sa terminal-overrides ",xterm*:Tc"
# set -g terminal-overrides ',*256col*:RGB'

# set default shell
set-option -g default-shell /bin/zsh

# set mouse
set -g mouse on

# Set prefix key to c-a instead of default c-b
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# set colourscheme
set -g status-position "top"

set -g @catppuccin_flavour 'frappe'
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator ""
set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_middle_separator " "
set -g @catppuccin_window_default_fill "all"
set -g @catppuccin_window_current_fill "none"
set -g @catppuccin_window_current_text '#(echo "#{pane_current_path}" | sed "s|^$HOME/||")'
set -g @catppuccin_window_connect_separator "yes"

set -g @catppuccin_status_modules_right "application session date_time battery"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

# if multiple clients are attached to the same window, maximize it to the bigger one
set-window-option -g aggressive-resize

# Start windows and pane numbering with index 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# show times longer than supposed
set -g display-panes-time 500

# tmux messages are displayed for 2 seconds
set -g display-time 2000

# faster command sequence
set -s escape-time 0

# have a very large history
set -g history-limit 5000

# set title
set -g set-titles on
set -g set-titles-string "#T"
set -g set-titles-string '#(echo "#{pane_current_path}" | sed "s|^$HOME|~|")'

# split horiziontal and vertical splits, instead of % and " also open them in the same directory
bind-key c    new-window -c "#{pane_current_path}"
bind-key '\'  split-window -h -c '#{pane_current_path}'
bind-key %    split-window -h -c "#{pane_current_path}"
bind-key -    split-window -v -c '#{pane_current_path}'
bind-key '"'  split-window -v -c "#{pane_current_path}"
bind-key Down split-window -v -l 10 -c '#{pane_current_path}'
bind-key Up   split-window -v -b -l 10 -c '#{pane_current_path}'

# {n}vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use Alt-Arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# toogle last window by hitting  C-a C-a
bind-key C-a last-window

# use Shift-Arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# use Shift Alt {n}vim keys to switch windows
bind -n M-H previous-window
bind -n M-L next-window

# pressing Ctrl Shift Left will move the current window to the left
bind-key -n C-S-Left run-shell 'winIdx=$(($(tmux display-message -p "#I")-1)) && \
                                 if [[ $winIdx -gt 0 ]]; then tmux swap-window -t -1 && tmux select-window -t $winIdx; fi'
# pressing Ctrl Shift Right will move the current window to the right
bind-key -n C-S-Right run-shell 'winCnt=$(tmux display-message -p "#{session_windows}"); \
                                 winIdx=$(($(tmux display-message -p "#I")+1)) && \
                                 if [[ $winIdx -le $winCnt ]]; then tmux swap-window -t +1 && tmux select-window -t $winIdx; fi'

# equally resize all panes
bind-key M-, select-layout even-horizontal
bind-key M-. select-layout even-vertical

# resize panes
bind-key -n M-C-Down resize-pane -D 1
bind-key -n M-C-Up resize-pane -U 1
bind-key -n M-C-Left resize-pane -L 1
bind-key -n M-C-Right resize-pane -R 1

# reload tmux config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Use vim keybindings in copy mode
set-window-option -g mode-keys vi

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi Space

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# copy text with `y` in copy mode
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel\; run "tmux save -|pbcopy >/dev/null 2>&1"
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# copy text with mouse selection without pressing any key
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save - | pbcopy >/dev/null 2>&1"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# sync panes (Send input to all panes in the window). When enabled, pane borders become red as an indication.
bind C-s if -F '#{pane_synchronized}' \
   'setw synchronize-panes off; \
    setw pane-active-border-style fg=#8caaee; \
    setw pane-border-format       " #P "' \
   'setw synchronize-panes on; \
    setw pane-active-border-style fg=#e5c890; \
    setw pane-border-format       " #P - Pane Synchronization ON "'

# Disable confirm before killing
bind-key x kill-pane

# add plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-yank'
# Initialize plugin manager
run '~/.config/tmux/plugins/tpm/tpm'


