# Ensure that a non-login, non-interactive shell has a defined environment.
if [[ ($SHLVL -eq 1 && ! -o LOGIN) && -s "${ZDOTDIR:-$HOME}/.zprofile" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprofile"
fi

PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin"

# set the github API token for homebrew
HOMEBREW_GITHUB_API_TOKEN_PATH="$HOME/Dropbox/sync.dotfiles/brew.github.token.txt"
[[ -f $HOMEBREW_GITHUB_API_TOKEN_PATH ]] && export HOMEBREW_GITHUB_API_TOKEN=$(<$HOMEBREW_GITHUB_API_TOKEN_PATH)
export HOMEBREW_CASK_OPTS=--no-quarantine
export HOMEBREW_NO_ENV_HINTS=1

# nnn
X_NNN="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/"
if [ -f "$X_NNN/nnn.zsh" ]; then
  . "$X_NNN/nnn.zsh"
fi
unset X_NNN

# maven
if command -v /usr/local/opt/maven &>/dev/null; then
  M2="/usr/local/opt/maven"
  if [ -d "$M2" ]; then
    export M2_HOME="$M2/libexec"
    PATH="$M2/bin:$PATH"
  fi
fi

# bin in home dir
HOME_BIN="$HOME/bin"
[[ -d $HOME_BIN ]] && PATH="$HOME_BIN:$PATH"

# .local/bin in home dir
HOME_LBIN="$HOME/.local/bin"
[[ -d $HOME_LBIN ]] && PATH="$HOME_LBIN:$PATH"

# hombrew sbin
BREW_SBIN=/usr/local/sbin
[[ -d $BREW_SBIN ]] && PATH="$BREW_SBIN:$PATH"

## gnu coreutils
GNU_BIN=$(brew --prefix coreutils)/bin
[[ -d "$GNU_BIN" ]] && PATH="$PATH:$GNU_BIN"

# gnu findutils
BIN_FIND_GNU="/usr/local/opt/findutils/bin"
[[ -d $BIN_FIND_GNU ]] && PATH="$BIN_FIND_GNU:$PATH"

# gnu man
MANPATH_GNU="/usr/local/opt/findutils/libexec/gnuman"
[[ -d $MANPATH_GNU ]] && export MANPATH="$MANPATH_GNU:$MANPATH"

# android
ANDROID_HOME="$HOME/Library/Android/sdk"
if [[ -d $ANDROID_HOME ]]; then
  export ANDROID_HOME
  PATH="$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools/bin:$PATH"
fi

GOROOT="/usr/local/opt/go/libexec"
if [ -d "$GOROOT" ]; then
  export GOROOT
  export GOPATH="$HOME/.go"
  [[ -d $GOPATH ]] || mkdir -p "$GOPATH"
  [[ -d "$GOPATH/src/github.com" ]] || mkdir -p "$GOPATH/src/github.com"
  PATH="$PATH:$GOPATH/bin:$GOROOT/bin"
fi

# disable to run Firefox in safe mode
export MOZ_DISABLE_SAFE_MODE_KEY="never"

# curl
CURLP="/usr/local/opt/curl-openssl/bin"
[[ -d $CURLP ]] && PATH="$CURLP:$PATH"

# misc
# PATH="$PATH:$HOME/hacker1/xsser"

# gettext
GETTXT="/usr/local/opt/gettext"
if [ -d "$GETTXT" ]; then
  export LDFLAGS="$LDFLAGS -L$GETTXT/lib"
  export CPPFLAGS="$CPPFLAGS -I$GETTXT/include"
  PATH="$GETTXT/bin:${PATH}"
fi

# confluent
CONFLUENT_VER="7.3.1"
CONFLUENT_BIN="$HOME/.config/confluent-$CONFLUENT_VER/bin"
[[ -d $CONFLUENT_BIN ]] && PATH="$CONFLUENT_BIN:$PATH"
unset CONFLUENT_VER
unset CONFLUENT_BIN

export USER_ID=$(id -u $USER)

ulimit -n 1024

# the last one
export PATH=".:$PATH"
